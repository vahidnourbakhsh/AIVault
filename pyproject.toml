[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aivault"
version = "0.1.0"
description = "A comprehensive collection of AI models, methods, examples, and tutorials"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = [
    "artificial intelligence",
    "machine learning", 
    "deep learning",
    "generative ai",
    "computer vision",
    "natural language processing",
    "tutorials"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
requires-python = ">=3.10"
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "scikit-learn>=1.0.0",
    "scipy>=1.7.0",
    "torch>=2.0.0",
    "transformers>=4.20.0",
    "datasets>=2.0.0",
    "tqdm>=4.60.0",
    "pillow>=8.3.0",
    "opencv-python>=4.5.0",
    "jupyter>=1.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pre-commit>=2.17.0"
]
gpu = [
    "torch[cuda]",
    "tensorflow[gpu]"
]
audio = [
    "librosa>=0.9.0",
    "soundfile>=0.10.0"
]
deployment = [
    "fastapi>=0.75.0",
    "uvicorn>=0.17.0",
    "streamlit>=1.8.0",
    "gradio>=3.0.0"
]

[project.urls]
Homepage = "https://github.com/username/AIVault"
Repository = "https://github.com/username/AIVault.git"
Documentation = "https://github.com/username/AIVault/tree/main/docs"
"Bug Tracker" = "https://github.com/username/AIVault/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["aivault*"]

[tool.setuptools.package-data]
aivault = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["aivault"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sklearn.*",
    "matplotlib.*",
    "seaborn.*",
    "cv2.*",
    "PIL.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--verbose",
    "--tb=short"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "integration: marks tests as integration tests"
]

[tool.coverage.run]
source = ["aivault"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]
